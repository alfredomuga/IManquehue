{
	"name": "MaestraProyectoEtapa",
	"properties": {
		"folder": {
			"name": "Dimensiones"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DLMaestroProyectoEtapa",
						"type": "DatasetReference"
					},
					"name": "DLMaestroProyectoEtapa"
				},
				{
					"dataset": {
						"referenceName": "DWDimProyectoEtapa",
						"type": "DatasetReference"
					},
					"name": "DwDimProyectoEtapa2"
				}
			],
			"sinks": [
				{
					"name": "DWDimProyectoEtapa"
				}
			],
			"transformations": [
				{
					"name": "SeleccionarColumnas"
				},
				{
					"name": "TrimUpper"
				},
				{
					"name": "HashProyectoEtapa"
				},
				{
					"name": "CrearActualizar"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Activo as string,",
				"          {Etapa Comercial} as string,",
				"          {Etapa Financiera} as string,",
				"          Unidades as string,",
				"          {Rut Empresa} as string,",
				"          {Vigencia de Deuda} as string,",
				"          Segmento as string,",
				"          {Participacion Socios} as string,",
				"          Socio as string,",
				"          Comuna as string,",
				"          Constructora as string,",
				"          {Considerar Balance Inmobiliario} as string,",
				"          {Costo Total} as string,",
				"          {Valor Terreno} as string,",
				"          {Linea Construccion Aprobada} as string,",
				"          { Tipo Activo} as string,",
				"          {Etapa Gestión} as string,",
				"          {Etapa Constructora} as string,",
				"          {Código} as string,",
				"          IVA as string,",
				"          IFRS as string,",
				"          {Banco Alzante} as string,",
				"          {Considerar Reportes Comerciales} as string,",
				"          {Considerar Masterfechas} as string,",
				"          {Considerar Flujo Caja} as string,",
				"          CodigoSAP as string,",
				"          CodigoPlanOK as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DLMaestroProyectoEtapa",
				"source(output(",
				"          idProyectoEtapa as integer,",
				"          Proyecto as string,",
				"          EtapaComercial as string,",
				"          EtapaFinanciera as string,",
				"          Unidades as integer,",
				"          RutEmpresa as string,",
				"          Segmento as string,",
				"          ParticipacionSocios as double,",
				"          Socio as string,",
				"          Comuna as string,",
				"          Constructora as string,",
				"          CostoTotal as double,",
				"          ValorTerreno as double,",
				"          LineaConstruccion as double,",
				"          ProximoHito as string,",
				"          FechaBudget as date,",
				"          FechaForecast as date,",
				"          Variacion as double,",
				"          EstadoProyecto as string,",
				"          TipoFinanciamientoSocios as string,",
				"          VigenciaDeuda as string,",
				"          TipoActivo as string,",
				"          EtapaGestion as string,",
				"          AtrasoMeses as integer,",
				"          EtapaConstructora as string,",
				"          Codigo as string,",
				"          Considerar as string,",
				"          Empresa as string,",
				"          BancoAlzante as string,",
				"          IVA as double,",
				"          IFRS as double,",
				"          Consolida as string,",
				"          Act as integer,",
				"          Act_Comercial as integer,",
				"          Act_Masterfechas as string,",
				"          Act_FlujoCaja as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> DwDimProyectoEtapa2",
				"DLMaestroProyectoEtapa select(mapColumn(",
				"          Periodo,",
				"          Proyecto,",
				"          Etapa,",
				"          Hito,",
				"          Mes,",
				"          {Año}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SeleccionarColumnas",
				"SeleccionarColumnas derive() ~> TrimUpper",
				"TrimUpper derive() ~> HashProyectoEtapa",
				"HashProyectoEtapa exists(') == ERROR_FUNCTION(',",
				"     negate:true,",
				"     broadcast: 'auto')~> CrearActualizar",
				"CrearActualizar sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DWDimProyectoEtapa"
			]
		}
	}
}